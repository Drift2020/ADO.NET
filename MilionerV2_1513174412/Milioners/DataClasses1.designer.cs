#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Milioners.LINQ
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Milion")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertQuestio(Questio instance);
    partial void UpdateQuestio(Questio instance);
    partial void DeleteQuestio(Questio instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::Milioners.Properties.Settings.Default.MilionConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Questio> Questios
		{
			get
			{
				return this.GetTable<Questio>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Delete_Questio")]
		public int Delete_Questio([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Questio", DbType="NVarChar(255)")] string questio)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), questio);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Update_Questio")]
		public int Update_Questio([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Questio_old", DbType="NVarChar(255)")] string questio_old, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Questio", DbType="NVarChar(255)")] string questio, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Answer_1", DbType="NVarChar(255)")] string answer_1, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Answer_2", DbType="NVarChar(255)")] string answer_2, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Answer_3", DbType="NVarChar(255)")] string answer_3, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Answer_4", DbType="NVarChar(255)")] string answer_4)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), questio_old, questio, answer_1, answer_2, answer_3, answer_4);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.[Save]")]
		public int Save([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(255)")] string q, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(255)")] string a1, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(255)")] string a2, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(255)")] string a3, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(255)")] string a4)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), q, a1, a2, a3, a4);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Questios")]
	public partial class Questio : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Questio1;
		
		private string _Answer_1;
		
		private string _Answer_2;
		
		private string _Answer_3;
		
		private string _Answer_4;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnQuestio1Changing(string value);
    partial void OnQuestio1Changed();
    partial void OnAnswer_1Changing(string value);
    partial void OnAnswer_1Changed();
    partial void OnAnswer_2Changing(string value);
    partial void OnAnswer_2Changed();
    partial void OnAnswer_3Changing(string value);
    partial void OnAnswer_3Changed();
    partial void OnAnswer_4Changing(string value);
    partial void OnAnswer_4Changed();
    #endregion
		
		public Questio()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Questio", Storage="_Questio1", DbType="NVarChar(255)")]
		public string Questio1
		{
			get
			{
				return this._Questio1;
			}
			set
			{
				if ((this._Questio1 != value))
				{
					this.OnQuestio1Changing(value);
					this.SendPropertyChanging();
					this._Questio1 = value;
					this.SendPropertyChanged("Questio1");
					this.OnQuestio1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Answer_1", DbType="NVarChar(255)")]
		public string Answer_1
		{
			get
			{
				return this._Answer_1;
			}
			set
			{
				if ((this._Answer_1 != value))
				{
					this.OnAnswer_1Changing(value);
					this.SendPropertyChanging();
					this._Answer_1 = value;
					this.SendPropertyChanged("Answer_1");
					this.OnAnswer_1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Answer_2", DbType="NVarChar(255)")]
		public string Answer_2
		{
			get
			{
				return this._Answer_2;
			}
			set
			{
				if ((this._Answer_2 != value))
				{
					this.OnAnswer_2Changing(value);
					this.SendPropertyChanging();
					this._Answer_2 = value;
					this.SendPropertyChanged("Answer_2");
					this.OnAnswer_2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Answer_3", DbType="NVarChar(255)")]
		public string Answer_3
		{
			get
			{
				return this._Answer_3;
			}
			set
			{
				if ((this._Answer_3 != value))
				{
					this.OnAnswer_3Changing(value);
					this.SendPropertyChanging();
					this._Answer_3 = value;
					this.SendPropertyChanged("Answer_3");
					this.OnAnswer_3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Answer_4", DbType="NVarChar(255)")]
		public string Answer_4
		{
			get
			{
				return this._Answer_4;
			}
			set
			{
				if ((this._Answer_4 != value))
				{
					this.OnAnswer_4Changing(value);
					this.SendPropertyChanging();
					this._Answer_4 = value;
					this.SendPropertyChanged("Answer_4");
					this.OnAnswer_4Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
